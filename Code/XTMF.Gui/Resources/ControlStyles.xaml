<!-- 
    Copyright 2015-2016 Travel Modelling Group, Department of Civil Engineering, University of Toronto

    This file is part of XTMF.

    XTMF is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    XTMF is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with XTMF.  If not, see <http://www.gnu.org/licenses/>.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:userControls="clr-namespace:XTMF.Gui.UserControls">


    <Style x:Key="BorderHoverStyle" TargetType="StackPanel">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1.0"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="0.7"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <PathGeometry x:Key="CancelIconPath" Figures="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z" FillRule="NonZero"/>

    <PathGeometry x:Key="Checkmark" Figures="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" />
    <PathGeometry x:Key="ModelSystemIconPath" Figures="M44 18v-4h-4v-4c0-2.2-1.8-4-4-4H8c-2.2 0-4 1.8-4 4v28c0 2.2 1.8 4 4 4h28c2.2 0 4-1.8 4-4v-4h4v-4h-4v-4h4v-4h-4v-4h4zm-8 20H8V10h28v28zM12 26h10v8H12zm12-12h8v6h-8zm-12 0h10v10H12zm12 8h8v12h-8z" FillRule="NonZero"/>

    <PathGeometry x:Key="LinkIconPath" Figures="M1.9 9c0-1.16.94-2.1 2.1-2.1h4V5H4C1.79 5 0 6.79 0 9s1.79 4 4 4h4v-1.9H4c-1.16 0-2.1-.94-2.1-2.1zM14 5h-4v1.9h4c1.16 0 2.1.94 2.1 2.1 0 1.16-.94 2.1-2.1 2.1h-4V13h4c2.21 0 4-1.79 4-4s-1.79-4-4-4zm-8 5h6V8H6v2z" FillRule="NonZero"/>

    <PathGeometry x:Key="PreviousRunIconPath" 
                   Figures="M25.99 6C16.04 6 8 14.06 8 24H2l7.79 7.79.14.29L18 24h-6c0-7.73 6.27-14 14-14s14 6.27 14 14-6.27 14-14 14c-3.87 0-7.36-1.58-9.89-4.11l-2.83 2.83C16.53 39.98 21.02 42 25.99 42 35.94 42 44 33.94 44 24S35.94 6 25.99 6zM24 16v10l8.56 5.08L34 28.65l-7-4.15V16h-3z" FillRule="NonZero"/>


    <PathGeometry x:Key="ErrorIconPath" Figures="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z" FillRule="NonZero"/>
    <PathGeometry x:Key="MetaModuleIconPath" Figures="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2zM7 17h10V7H7v10zm2-8h6v6H9V9z" FillRule="NonZero"/>

    <PathGeometry x:Key="CollectionIconPath" Figures="M6 26h4v-4H6v4zm0 8h4v-4H6v4zm0-16h4v-4H6v4zm8 8h28v-4H14v4zm0 8h28v-4H14v4zm0-20v4h28v-4H14z" FillRule="NonZero"/>

    <PathGeometry x:Key="ModuleIcon2Path" Figures="M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z" FillRule="NonZero"/>
    <PathGeometry x:Key="ModuleIconPath" Figures="M20.5 11H19V7c0-1.1-.9-2-2-2h-4V3.5C13 2.12 11.88 1 10.5 1S8 2.12 8 3.5V5H4c-1.1 0-1.99.9-1.99 2v3.8H3.5c1.49 0 2.7 1.21 2.7 2.7s-1.21 2.7-2.7 2.7H2V20c0 1.1.9 2 2 2h3.8v-1.5c0-1.49 1.21-2.7 2.7-2.7 1.49 0 2.7 1.21 2.7 2.7V22H17c1.1 0 2-.9 2-2v-4h1.5c1.38 0 2.5-1.12 2.5-2.5S21.88 11 20.5 11z" FillRule="NonZero"/>



    <PathGeometry x:Key="ClearIconPathGeometry" Figures="M38 12.83L35.17 10 24 21.17 12.83 10 10 12.83 21.17 24 10 35.17 12.83 38 24 26.83 35.17 38 38 35.17 26.83 24z" FillRule="NonZero"/>

    <PathGeometry x:Key="NewIconPathGeometry"  Figures="M20 6h-8l-2-2H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-1 8h-3v3h-2v-3h-3v-2h3V9h2v3h3v2z"/>

    <PathGeometry x:Key="OptionalIconPath" Figures="M17 15h2V7c0-1.1-.9-2-2-2H9v2h8v8zM7 17V1H5v4H1v2h4v10c0 1.1.9 2 2 2h10v4h2v-4h4v-2H7z" FillRule="NonZero"/>

    <PathGeometry x:Key="FullErrorIconPath" Figures="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z" FillRule="NonZero"/>

    <PathGeometry x:Key="FolderOpenIconPath" Figures="M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z" FillRule="NonZero"/>

    <PathGeometry x:Key="PasteIconPathGeometry" Figures="M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z" FillRule="NonZero"/>

    <PathGeometry x:Key="SaveIconPathGeometry" Figures="M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z" FillRule="NonZero"/>
    <PathGeometry x:Key="CopyIconPathGeometry"  Figures="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z" FillRule="NonZero"/>

    <PathGeometry x:Key="RefreshIconPathGeometry" Figures="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z" FillRule="NonZero"/>

    <PathGeometry x:Key="EditIconPathGeometry" Figures="M6 34.5V42h7.5l22.13-22.13-7.5-7.5L6 34.5zm35.41-20.41c.78-.78.78-2.05 0-2.83l-4.67-4.67c-.78-.78-2.05-.78-2.83 0l-3.66 3.66 7.5 7.5 3.66-3.66z" FillRule="NonZero"/>

    <PathGeometry x:Key="ImportIconPathGeometry"  Figures="M38.71 20.07C37.35 13.19 31.28 8 24 8c-5.78 0-10.79 3.28-13.3 8.07C4.69 16.72 0 21.81 0 28c0 6.63 5.37 12 12 12h26c5.52 0 10-4.48 10-10 0-5.28-4.11-9.56-9.29-9.93zM34 26L24 36 14 26h6v-8h8v8h6z"/>

    <PathGeometry x:Key="HelpIconPathGeometry" Figures="M11,18h2v-2h-2v2zM12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM12,20c-4.41,0 -8,-3.59 -8,-8s3.59,-8 8,-8 8,3.59 8,8 -3.59,8 -8,8zM12,6c-2.21,0 -4,1.79 -4,4h2c0,-1.1 0.9,-2 2,-2s2,0.9 2,2c0,2 -3,1.75 -3,5h2c0,-2.25 3,-2.5 3,-5 0,-2.21 -1.79,-4 -4,-4z"/>

    <PathGeometry x:Key="SettingsIconPathGeometry"  Figures="M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z"/>

    <PathGeometry x:Key="RunIconPathGeometry" Figures="M13.49 5.48c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-3.6 13.9l1-4.4 2.1 2v6h2v-7.5l-2.1-2 .6-3c1.3 1.5 3.3 2.5 5.5 2.5v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1l-5.2 2.2v4.7h2v-3.4l1.8-.7-1.6 8.1-4.9-1-.4 2 7 1.4z"/>

    <ControlTemplate x:Key="PasteIcon">
        <Canvas Left="0" Top="0" Width="16" Height="16">
            <Path Width="16" Height="16" Fill="{DynamicResource MaterialDesignBody}"
                       
                          Stretch="Uniform"
                          Data="{DynamicResource PasteIconPathGeometry}" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="RunIcon">
        <Canvas Left="0" Top="0" Width="16" Height="16">
            <Path Width="16" Height="16" Fill="{DynamicResource MaterialDesignBody}"
                       
                          Stretch="Uniform"
                          Data="{DynamicResource RunIconPathGeometry}" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="SettingsIcon">
        <Canvas Left="0" Top="0" Width="16" Height="16">
            <Path Width="16" Height="16" Fill="{DynamicResource MaterialDesignBody}"
                       
                          Stretch="Uniform"
                          Data="{DynamicResource SettingsIconPathGeometry}" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="CopyIcon">
        <Canvas Left="0" Top="0" Width="16" Height="16">
            <Path Width="16" Height="16" Fill="{DynamicResource MaterialDesignBody}"
                       
                          Stretch="Uniform"
                          Data="{DynamicResource CopyIconPathGeometry}" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="CancelIcon">
        <Canvas Left="0" Top="0" Width="16" Height="16">
            <Path Width="16" Height="16" Fill="{DynamicResource MaterialDesignBody}"
                       
                          Stretch="Uniform"
                          Data="{DynamicResource CancelIconPath}" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="LinkIcon">
        <Canvas Left="0" Top="0" Width="16" Height="16">
            <Path Width="16" Height="16" Fill="{DynamicResource MaterialDesignBody}"
                       
                          Stretch="Uniform"
                          Data="{DynamicResource LinkIconPath}" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="RefreshIcon">
        <Canvas Left="0" Top="0" Width="16" Height="16">
            <Path Width="16" Height="16" Fill="{DynamicResource MaterialDesignBody}"
                       
                          Stretch="Uniform"
                          Data="{DynamicResource RefreshIconPathGeometry}" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="EditIcon">
        <Canvas Left="0" Top="0" Width="16" Height="16">
            <Path Width="16" Height="16" Fill="{DynamicResource MaterialDesignBody}"
                       
                          Stretch="Uniform"
                          Data="{DynamicResource EditIconPathGeometry}" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="OpenIcon">
        <Canvas Left="0" Top="0" Width="16" Height="16">
            <Path Width="16" Height="16" Fill="{DynamicResource MaterialDesignBody}"
                       
                          Stretch="Uniform"
                          Data="{DynamicResource FolderOpenIconPath}" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="SaveIcon">
        <Canvas Left="0" Top="0" Width="16" Height="16">
            <Path Width="16" Height="16" Fill="{DynamicResource MaterialDesignBody}"
                       
                          Stretch="Uniform"
                          Data="{DynamicResource SaveIconPathGeometry}" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="NewIcon">
        <Canvas Left="0" Top="0" Width="16" Height="16">
            <Path Width="16" Height="16" Fill="{DynamicResource MaterialDesignBody}"
                       
                          Stretch="Uniform"
                          Data="{DynamicResource NewIconPathGeometry}" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="ImportIcon">
        <Canvas Left="0" Top="0" Width="16" Height="16">
            <Path Width="16" Height="16" Fill="{DynamicResource MaterialDesignBody}"
                       
                          Stretch="Uniform"
                          Data="{DynamicResource ImportIconPathGeometry}" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="HelpIcon">
        <Canvas Left="0" Top="0" Width="16" Height="16">
            <Path Width="16" Height="16" Fill="{DynamicResource MaterialDesignBody}"
                       
                          Stretch="Uniform"
                          Data="{DynamicResource HelpIconPathGeometry}" />
        </Canvas>
    </ControlTemplate>

    <!-- These resources are added to avoid missing message spam-->
    <SolidColorBrush x:Key="AvalonDockThemeVs2013DocumentWellTabUnselectedText" Color="Black"></SolidColorBrush>
    <SolidColorBrush x:Key="AvalonDockThemeVs2013TabBackground" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="AvalonDockThemeVs2013PanelBorderBrush" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="AvalonDockThemeVs2013DocumentWellOverflowButtonDefaultGlyph" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="AvalonDockThemeVs2013DocumentWellTabUnselectedBackground" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="AvalonDockThemeVs2013DocumentWellTabSelectedActiveBackground" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="AvalonDockThemeVs2013DocumentWellTabSelectedActiveText" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="AvalonDockThemeVs2013DocumentWellTabUnselectedHoveredBackground" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="AvalonDockThemeVs2013DocumentWellTabUnselectedHoveredText" Color="Black"></SolidColorBrush>

    <Style TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="Segoe UI" />
    </Style>

    <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="XTMFTabControl"  TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="0,0,4,-1" IsItemsHost="True" KeyboardNavigation.TabIndex="1"
                                    Background="Transparent" />
                        <Border Name="Border" Grid.Row="1" BorderThickness="0"
                                    CornerRadius="2">
                            <ContentPresenter Name="PART_SelectedContentHost" Margin="0" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="XtmfTabItem" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
        <!--<Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"></Setter>-->
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                
                <DataTemplate>
                    <DataTemplate.Triggers>
                    </DataTemplate.Triggers>
                    <Border >
                  <ContentPresenter Margin="0" Content="{TemplateBinding Content}" x:Name="HeaderContent" >
                      <ContentPresenter.ContentTemplate>
                          <DataTemplate>
                                <StackPanel>
                                        <TextBlock Text="{TemplateBinding Content}">
                                     
                                        </TextBlock>
                                    </StackPanel>
                              </DataTemplate>

                            </ContentPresenter.ContentTemplate>
                    

                            <!--<ContentPresenter.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </ContentPresenter.LayoutTransform> -->
                    </ContentPresenter>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
       <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Background="{DynamicResource PrimaryHueMidBrush}"  BorderThickness="0,0,0,0" CornerRadius="0,0,0,0" Margin="0,0" Padding="5,10" Name="ContentBorder">
                        <ContentPresenter x:Name="ContentSite" 
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="0"/>
                        
                    </Border>
                    <ControlTemplate.Triggers>

                      
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" ></Condition>
                                <Condition Property="IsMouseOver" Value="False" SourceName="ContentBorder"></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"></Setter>
                              
                                <Setter  Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"></Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                      
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"></Condition>
                                <Condition Property="IsMouseOver" Value="False" SourceName="ContentBorder"></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"></Setter>
                              
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"></Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"></Condition>
                                <Condition Property="IsMouseOver" Value="True" SourceName="ContentBorder"></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"></Setter>
                              
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"></Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger> 
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
    </Style>

    <!-- Expander -->

    <ControlTemplate x:Key="ParameterNameButtonStyle"
                 TargetType="{x:Type ToggleButton}">
        <Border x:Name="Border"
          BorderThickness="0" Background="Transparent" Cursor="Hand">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                    </VisualState>
                    <VisualState x:Name="Pressed">
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="CollapsedArrow">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Hidden}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="ExpandededArrow">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <TextBlock x:Name="CollapsedArrow" Foreground="{DynamicResource MaterialDesignBody}"
                           FontStyle="Italic" Text="Show More - Ctrl + E" Cursor="Hand" FontSize="12" Opacity="0.5" VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style>
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="ScrollBar.MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation From="0.5" To="1.0" Duration="0:0:0.20"
                                                    Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="ScrollBar.MouseLeave">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation From="1.0" To="0.5" Duration="0:0:0.20"
                                                    Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock x:Name="ExpandededArrow" Foreground="{DynamicResource MaterialDesignBody}" 
                           FontStyle="Italic" Text="Show Less - Ctrl + E" Visibility="Hidden" FontSize="12" Opacity="0.5" VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style>
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="ScrollBar.MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation From="0.5" To="1.0" Duration="0:0:0.20"
                                                    Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="ScrollBar.MouseLeave">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation From="1.0" To="0.5" Duration="0:0:0.20"
                                                    Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="ParameterNameStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="ParameterNameStyleTemplate" TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow"
                           Height="0" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">

                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{DynamicResource  ControlColour}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{DynamicResource ControlColour}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Border" Grid.Row="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="AUTO" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton Grid.Column="1" HorizontalAlignment="Right" x:Name="ParameterNameButtonStyle" OverridesDefaultStyle="True"
                                Template="{DynamicResource ParameterNameButtonStyle}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay,
                      RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False">
                                    <ToggleButton.Background>
                                        <SolidColorBrush Color="Transparent" />
                                    </ToggleButton.Background>
                                </ToggleButton>
                                <ContentPresenter Grid.Column="0"
                                Margin="0"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                            </Grid>
                        </Grid>
                        <Border x:Name="Content"
                  Grid.Row="1"
                  Focusable="False"
                  BorderThickness="0,0,0,0"
                  CornerRadius="20,20,20,20">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="ScaleTransform" />
                                    <TranslateTransform x:Name="TranslateTransform" />
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Border.Background>
                                <SolidColorBrush Color="Transparent" />
                            </Border.Background>
                            <ContentPresenter x:Name="ContentHost" Margin="4" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.Setters>
                                <Setter Property="Height" TargetName="ContentRow" Value="{Binding DesiredHeight, Source=Content}" />
                            </Trigger.Setters>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="0" To="1" Duration="0:0:0.20" Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" />
                                        <DoubleAnimation From="0" To="1" Duration="0:0:0.40" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style TargetType="{x:Type Control}" x:Key="HoverLabel">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource ControlColourBrush}" />
        <Setter Property="Margin" Value="0.25cm,0,0,0"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">

                <Setter Property="Foreground" Value="{DynamicResource FocusBrushHover}"></Setter>


            </Trigger>
        </Style.Triggers>
    </Style>


    <!--Control colors.-->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFFF0000</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <DynamicResource x:Key="ControlMediumColorR" ResourceKey="ControlMediumColor"/>

    <Color x:Key="ControlDarkColor">#FF211AA9</Color>


    <!--
    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color> -->


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <!--<LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
    </LinearGradientBrush> -->

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
                    Offset="0" />
                <GradientStop Color="#600000FF"
                    Offset="0.4" />
                <GradientStop Color="#600000FF"
                    Offset="0.6" />
                <GradientStop Color="#000000FF"
                    Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>



    <Style x:Key="ExpandCollapseToggleStyle"
       TargetType="ToggleButton">
        <Setter Property="Focusable"
          Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="15"
              Height="13"
              Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Collapsed">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Expanded">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Collapsed"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Margin="1,1,1,1"
                Data="M 4 0 L 8 4 L 4 8 Z" Fill="{DynamicResource MaterialDesignBody}">
                         
                        </Path>
                        <Path x:Name="Expanded"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Margin="1,1,1,1"
                Data="M 0 4 L 8 4 L 4 8 Z"
                Visibility="Hidden" Fill="{DynamicResource MaterialDesignBody}">
                          
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{DynamicResource SelectionBlue}"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource SelectionBlue}"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.ActiveBorderBrush}" Color="{DynamicResource SelectionBlue}"/>
        </Style.Resources>

    </Style>




    <Style x:Name="TreeViewItemStyle" x:Key="TreeViewItemStyle"
       TargetType="{x:Type TreeViewItem}">

        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="Visibility" Value="{Binding ModuleVisibility, Mode=TwoWay}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="BorderThickness" Value="0" />


        <Setter Property="IsSelected"
                    Value="{Binding Path=IsSelected, Mode=TwoWay}" />

  
        <Setter Property="Padding"
          Value="1,0,0,0" />
        <Setter Property="Foreground"
          Value="{DynamicResource MahApps.Brushes.Text}" />

      
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19"
                              Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">

                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="SelectedInactive">

                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ItemsHost">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="Expander"
                        Style="{DynamicResource ExpandCollapseToggleStyle}"
                        ClickMode="Press"
                        IsChecked="{Binding IsExpanded, 
            RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border x:Name="Bd"
                  Grid.Column="1"
                  Background="Transparent"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="0" 
                  Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header"
                              ContentSource="Header"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                          Grid.Row="1"
                          Grid.Column="1"
                          Grid.ColumnSpan="2"
                          Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems"
                   Value="false">
                            <Setter TargetName="Expander"
                    Property="Visibility"
                    Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader"
                         Value="false" />
                                <Condition Property="Width"
                         Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                    Property="MinWidth"
                    Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader"
                         Value="false" />
                                <Condition Property="Height"
                         Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                    Property="MinHeight"
                    Value="19" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{DynamicResource ControlColour}"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource ControlHighlightColour}"/>
        </Style.Resources> -->
    </Style>  

</ResourceDictionary>