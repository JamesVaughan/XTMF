<!-- 
    Copyright 2014-2022 Travel Modelling Group, Department of Civil Engineering, University of Toronto

    This file is part of XTMF.

    XTMF is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    XTMF is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with XTMF.  If not, see <http://www.gnu.org/licenses/>.
-->
<UserControl x:Class="XTMF.Gui.UserControls.ProjectDisplay"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:my="clr-namespace:XTMF.Gui"
             xmlns:xtmf="clr-namespace:XTMF.Gui.UserControls"
             xmlns:xtmfp="clr-namespace:XTMF.Gui.CustomProperties"
             mc:Ignorable="d" 
             Focusable="True" SnapsToDevicePixels="True"
             Background="{DynamicResource MaterialDesignPaper}"
             d:DesignHeight="400" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="AUTO"/>
        </Grid.RowDefinitions>
        <Border  Margin="10 10 30 30"   Grid.Row="1" HorizontalAlignment="Right">
            <materialDesign:PopupBox  
                Style="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}"
                PlacementMode="TopAndAlignRightEdges"
                UnfurlOrientation="Vertical" PopupMode="Click"
                ToolTipService.Placement="Left" IsVisibleChanged="PopupBox_IsVisibleChanged">
                <StackPanel>
                    <StackPanel Name="CreateNewModelSystemStackPanel"   HorizontalAlignment="Right"   Orientation="Horizontal"  Style="{DynamicResource BorderHoverStyle}" MouseLeftButtonUp="CreateNewModelSystemStackPanel_MouseLeftButtonUp">
                        <Border Margin="0 0 5 0"  Height="28" CornerRadius="5" Background="{DynamicResource PrimaryHueDarkBrush}" >
                            <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Content="Create new model system" 
                                   VerticalAlignment="Center" Opacity="1.0"/>
                        </Border>
                        <Button Click="NewModelSystem_Click"  >
                            <xtmf:PackIconOverlap Width="32" Height="32"  IconKind="CubeOutline" IconKindMinor="Plus" Foreground="{DynamicResource PrimaryHueDarkBrush}"/>
                        </Button>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Right"   Orientation="Horizontal"  Style="{DynamicResource BorderHoverStyle}" MouseLeftButtonUp="StackPanel_MouseLeftButtonUp">

                        <Border Margin="0 0 5 0"  Height="28" CornerRadius="5" Background="{DynamicResource PrimaryHueDarkBrush}" >
                            <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Content="Open Project Directory" 
                                   VerticalAlignment="Center" Opacity="1.0"/>
                        </Border>
                        <Button Click="ButtonBase_OnClick" >
                            <materialDesign:PackIcon Kind="Folder" Foreground="{DynamicResource PrimaryHueDarkBrush}"/>
                        </Button>
                    </StackPanel>

                    <StackPanel Name="ImportModelSystemStackPanel"   HorizontalAlignment="Right"   Orientation="Horizontal"  Style="{DynamicResource BorderHoverStyle}" MouseLeftButtonUp="ImportModelSystemStackPanel_MouseLeftButtonUp">
                        <Border Margin="0 0 5 0"  Height="28" CornerRadius="5" Background="{DynamicResource PrimaryHueDarkBrush}" >
                            <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Content="Import Model System" 
                                   VerticalAlignment="Center" Opacity="1.0"/>
                        </Border>
                        <Button   Name="ImportButton" Click="ImportButton_OnClick" >
                            <xtmf:PackIconOverlap IconKind="CubeOutline" IconKindMinor="Import" Width="32" Height="32" Foreground="{DynamicResource PrimaryHueDarkBrush}"/>
                        </Button>
                    </StackPanel>

                    <StackPanel Name="ImportModelSystemFileStackPanel"   HorizontalAlignment="Right"   Orientation="Horizontal"  Style="{DynamicResource BorderHoverStyle}" MouseLeftButtonUp="ImportModelSystemFileStackPanel_MouseLeftButtonUp">
                        <Border Margin="0 0 5 0"  Height="28" CornerRadius="5" Background="{DynamicResource PrimaryHueDarkBrush}" >
                            <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Content="Import Model System From File" 
                                   VerticalAlignment="Center" Opacity="1.0"/>
                        </Border>
                        <Button  Name="ImportFromFileButton" Click="ImportFromFileButton_OnClick" >
                            <xtmf:PackIconOverlap IconKind="CubeOutline" IconKindMinor="FileImport" Width="32" Height="32" Foreground="{DynamicResource PrimaryHueDarkBrush}"/>
                        </Button>
                    </StackPanel>

                    <StackPanel Name="RefreshRunsStackPanel"  HorizontalAlignment="Right"   Orientation="Horizontal"  Style="{DynamicResource BorderHoverStyle}" MouseLeftButtonUp="RefreshRunsStackPanel_MouseLeftButtonUp" >
                        <Border Margin="0 0 5 0"  Height="28" CornerRadius="5" Background="{DynamicResource PrimaryHueDarkBrush}" >
                            <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Content="Refresh previous runs" 
                                   VerticalAlignment="Center" Opacity="1.0"/>
                        </Border>
                        <Button Name="RefreshPastRunsButton" Click="RefreshPastRunsButton_OnClick" >
                            <xtmf:PackIconOverlap Width="32" Height="32"  IconKind="Run" IconKindMinor="Refresh" Foreground="{DynamicResource PrimaryHueDarkBrush}"/>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </materialDesign:PopupBox>
        </Border>

        <Grid Grid.Row="0" HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="AUTO" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid VerticalAlignment="Stretch" Grid.Row="1" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" HorizontalAlignment="Stretch">
                    <Grid Grid.Column="0" HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="AUTO"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <materialDesign:ColorZone Width="Auto"  Mode="Standard" Padding="8 4 8 4" CornerRadius="2" Panel.ZIndex="1"
                                              Margin="12 12 12 12"
                                              materialDesign:ShadowAssist.ShadowDepth="Depth4">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Style="{DynamicResource MaterialDesignToolButton}">
                                    <materialDesign:PackIcon Kind="Magnify" Opacity=".56" />
                                </Button>
                                <my:FilterBox Grid.Column="1" x:Name="FilterModelSystemsBox" EnterPressed="FilterModelSystemsBox_EnterPressed" FilterWatermark="Search Modules... (Ctrl+E)" />
                                <Button Style="{DynamicResource MaterialDesignToolButton}" Grid.Column="2" />
                            </Grid>
                        </materialDesign:ColorZone>


                        <DockPanel 
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"  Width="Auto"
                        ScrollViewer.VerticalScrollBarVisibility="Auto" HorizontalAlignment="Stretch"
                        Background="{DynamicResource MaterialDesignPaper}" Grid.Row="1" LastChildFill="True" VerticalAlignment="Stretch" >
                            <Label Content="Model Systems" DockPanel.Dock="Top" Background="Transparent" FontSize="22" Margin="5,5,0,5"/>
                            <DataGrid Background="Transparent" PreviewKeyDown="ModelSystemsDataGrid_OnPreviewKeyDown" KeyDown="ModelSystemsDataGrid_OnKeyDown" Focusable="True" VerticalContentAlignment="Center" Name="ModelSystemsDataGrid"  MouseDoubleClick="ModelSystemDisplay_OnMouseDoubleClick" VerticalAlignment="Stretch" 
                            PreviewMouseLeftButtonDown="ModelSystemDisplay_OnPreviewMouseLeftButtonDown"   Margin="0 8 0 0" ItemsSource="{Binding Items3}" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False"
                                  materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8" Width="Auto" HorizontalContentAlignment="Stretch"
                                      ContextMenuOpening="ContextMenu_ContextMenuOpening">
                                <DataGrid.CellStyle>
                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MaterialDesignDataGridCell}">

                                        <Setter Property="BorderBrush" Value="Transparent"></Setter>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                    <Border Padding="0 8 0 8" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Margin="{TemplateBinding Padding}"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value=".56"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>

                                </DataGrid.CellStyle>
                                <DataGrid.RowStyle>
                                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MaterialDesignDataGridRow}">

                                        <Setter Property="Background" Value="Transparent"></Setter>

                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                            </Trigger>
                                            <Trigger Property="IsNewItem" Value="True">
                                                <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            </Trigger>
                                        </Style.Triggers>

                                    </Style>
                                </DataGrid.RowStyle>
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="Model System" CanUserSort="True">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <xtmf:ListViewControl Background="Transparent" IconKind="CubeOutline" TitleText="{Binding Name, Mode=OneWay}" HorizontalAlignment="Stretch" IsPathIcon="False" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                                          SubText="{Binding Description, Mode=OneWay}" StatusText="{Binding StatusText, Mode=OneWay}">
                                                    <xtmf:ListViewControl.IconPath>
                                                        <Path Data="{DynamicResource ModelSystemIconPath}"/>
                                                    </xtmf:ListViewControl.IconPath>
                                                </xtmf:ListViewControl>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Last Modified" CanUserSort="True" >
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                                    <TextBlock VerticalAlignment="Center" Text="{Binding LastModifiedTime}" ></TextBlock>
                                                    <TextBlock VerticalAlignment="Center" Text="{Binding LastModified}" ></TextBlock>
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                                <DataGrid.ContextMenu>
                                    <ContextMenu Tag="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget}">
                                        <MenuItem Header="Rename Model System (F2)" Click="RenameModelSystem_Click">
                                            <MenuItem.Icon>
                                                <ContentControl Template="{DynamicResource RefreshIcon}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Delete Model System (Del)" Click="DeleteModelSystem_Click">
                                            <MenuItem.Icon>
                                                <ContentControl Template="{DynamicResource CancelIcon}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Save Model System As" Click="SaveModelSystemAs_Click">
                                            <MenuItem.Icon>
                                                <ContentControl Template="{DynamicResource SaveIcon}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Export Model System As (Ctrl+S)" Click="ExportModelSystemAs_Click">
                                            <MenuItem.Icon>
                                                <ContentControl Template="{DynamicResource SaveIcon}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Copy Model System (Ctrl+C)" Click="CopyModelSystem_Click">
                                            <MenuItem.Icon>
                                                <ContentControl Template="{DynamicResource CopyIcon}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Paste As New Model System (Ctrl+V)" Click="PasteModelSystem_OnClick"
                                                    IsEnabled="{Binding DataContext.IsCanPasteModelSystem, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                            <MenuItem.Icon>
                                                <ContentControl Template="{DynamicResource PasteIcon}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                            </DataGrid>
                        </DockPanel>
                    </Grid>
                </Grid>
                <GridSplitter  Grid.Column="1" Width="2" Background="{DynamicResource MaterialDesignBackground}" HorizontalAlignment="Stretch"></GridSplitter>
                <Grid  Grid.Column="2" Background="{DynamicResource MaterialDesignPaper}" HorizontalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="AUTO" />
                        <RowDefinition Height="AUTO" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="1" FlowDirection="LeftToRight" Width="Auto" >
                        <Label Content="Previous Runs" Width="Auto"  Background="Transparent" FontSize="22" Foreground="{DynamicResource MaterialDesignBody}" Margin="5,5,0,5"/>
                    </DockPanel>
                    <materialDesign:ColorZone Grid.Row="0" Width="Auto"  Mode="Standard" Padding="8 4 8 4" CornerRadius="2" Panel.ZIndex="1"
                                              Margin="12 12 12 12"
                                              materialDesign:ShadowAssist.ShadowDepth="Depth4">
                        <Grid Width="Auto" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Style="{DynamicResource MaterialDesignToolButton}">
                                <materialDesign:PackIcon Kind="Magnify" Opacity=".56" />
                            </Button>
                            <my:FilterBox Grid.Column="1" x:Name="FilterPastRunsBox" />
                            <Button Style="{DynamicResource MaterialDesignToolButton}" Grid.Column="2" />
                        </Grid>
                    </materialDesign:ColorZone>

                    <ListView Grid.Row="2" x:Name="PastRunDisplay" Width="Auto" HorizontalAlignment="Stretch"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" BorderBrush="{x:Null}">

                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource XtmfListBoxItemNoDuration}">
                                <EventSetter Event="RequestBringIntoView" Handler="EventSetter_OnHandler"></EventSetter>
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListBox.ItemsPanel>

                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Vertical"></VirtualizingStackPanel>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <xtmf:ListViewControl TitleText="{Binding Name}" SubText="{Binding TimeStamp}" IsPackIconOverlap="True" MouseDoubleClick="PastRuns_MouseButton" IconKind="Timelapse" IsPathIcon="False">
                                    <xtmf:ListViewControl.PackIconOverlap>
                                        <xtmf:PackIconOverlap IconKind="Run" IconKindMinor="AvTimer" Width="32" Height="32"/>
                                    </xtmf:ListViewControl.PackIconOverlap>

                                </xtmf:ListViewControl >
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ContextMenu>
                            <ContextMenu Name="PreviousRunContextMenu">
                                <MenuItem Header="Open Results" Click="OpenPreviousRun_Click">
                                    <MenuItem.Icon>
                                        <ContentControl Template="{DynamicResource OpenIcon}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Delete" Click="DeletePreviousRun_Click">
                                    <MenuItem.Icon>
                                        <ContentControl Template="{DynamicResource CancelIcon}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListView>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>

